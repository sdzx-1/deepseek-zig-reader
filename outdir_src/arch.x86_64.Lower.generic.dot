
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="开始 generic(lower, inst)"];
    set_eval [label="@setEvalBranchQuota(2500)"];
    switch_ops_fixes [label="switch(inst.ops) 获取 fixes"];
    handle_else_fixes [label="返回错误: TODO lower .{s}"];
    handle_fixes_prefix [label="处理 fixes 生成前缀"];
    generate_mnemonic [label="生成助记符"];
    mnemonic_error [label="返回错误: 不支持的助记符"];
    switch_ops_operands [label="switch(inst.ops) 生成操作数"];
    handle_else_operands [label="返回错误: TODO lower {s} {s}"];
    emit [label="调用 lower.emit()"];
    end [label="结束"];

    start -> set_eval;
    set_eval -> switch_ops_fixes;

    switch_ops_fixes -> handle_else_fixes [label="else/未知 ops"];
    switch_ops_fixes -> handle_fixes_prefix [label="有效 ops"];

    handle_fixes_prefix -> generate_mnemonic;
    
    generate_mnemonic -> mnemonic_error [label="无法解析助记符"];
    generate_mnemonic -> switch_ops_operands [label="成功生成"];

    switch_ops_operands -> handle_else_operands [label="else/未知 ops"];
    switch_ops_operands -> emit [label="有效 ops"];

    emit -> end;

    // 错误处理路径
    handle_else_fixes -> end [label="错误返回"];
    mnemonic_error -> end [label="错误返回"];
    handle_else_operands -> end [label="错误返回"];
}
