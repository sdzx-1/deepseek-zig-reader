
digraph flowchart {
    node [shape=rectangle, fontname="Courier", fontsize=10];
    edge [fontname="Courier", fontsize=10];

    start [label="开始append函数"];
    init_vars [label="初始化变量\ntarget, generic_arch_name, zig_backend"];
    set_quota [label="@setEvalBranchQuota(4000)"];
    print_base_config [label="写入基础配置\n(zig_version, backend, output_mode等)"];
    loop_features [label="遍历CPU特性列表"];
    check_feature [label="特性是否启用？", shape=diamond];
    write_feature [label="写入特性名称到buffer"];
    print_os_config [label="写入OS配置模板"];
    switch_os_version [label="处理OS版本范围\nswitch(target.os.versionRange())", shape=diamond];
    handle_none [label="写入.none配置"];
    handle_semver [label="写入semver配置"];
    handle_linux [label="写入Linux配置"];
    handle_hurd [label="写入Hurd配置"];
    handle_windows [label="写入Windows配置"];
    write_os_footer [label="写入OS配置结尾"];
    dynamic_linker_check [label="检查dynamic_linker是否存在？", shape=diamond];
    write_dl_exists [label="写入dynamic_linker配置"];
    write_dl_none [label="写入.none配置"];
    print_compile_options [label="写入编译选项\n(object_format, mode, link_libc等)"];
    check_wasi [label="是否是WASI目标？", shape=diamond];
    write_wasi_config [label="写入wasi_exec_model"];
    check_is_test [label="is_test为真？", shape=diamond];
    write_test_functions [label="添加test_functions声明"];
    end [label="结束函数"];

    start -> init_vars -> set_quota -> print_base_config -> loop_features;
    loop_features -> check_feature;
    check_feature -> write_feature [label="是"];
    check_feature -> loop_features [label="否"];
    write_feature -> loop_features;
    loop_features -> print_os_config -> switch_os_version;
    
    switch_os_version -> handle_none [label=".none"];
    switch_os_version -> handle_semver [label=".semver"];
    switch_os_version -> handle_linux [label=".linux"];
    switch_os_version -> handle_hurd [label=".hurd"];
    switch_os_version -> handle_windows [label=".windows"];
    
    handle_none -> write_os_footer;
    handle_semver -> write_os_footer;
    handle_linux -> write_os_footer;
    handle_hurd -> write_os_footer;
    handle_windows -> write_os_footer;
    
    write_os_footer -> dynamic_linker_check;
    dynamic_linker_check -> write_dl_exists [label="存在"];
    dynamic_linker_check -> write_dl_none [label="不存在"];
    write_dl_exists -> print_compile_options;
    write_dl_none -> print_compile_options;
    
    print_compile_options -> check_wasi;
    check_wasi -> write_wasi_config [label="是"];
    check_wasi -> check_is_test [label="否"];
    write_wasi_config -> check_is_test;
    
    check_is_test -> write_test_functions [label="是"];
    check_is_test -> end [label="否"];
    write_test_functions -> end;
}
