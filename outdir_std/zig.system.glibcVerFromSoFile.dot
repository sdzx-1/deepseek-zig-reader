
digraph glibcVerFromSoFile {
    node [shape=rectangle, fontname="Courier", fontsize=10];
    edge [fontname="Courier", fontsize=10];
    
    start [label="开始", shape=ellipse];
    read_elf_header [label="读取ELF头部信息到hdr_buf"];
    check_magic [label="验证ELF魔数是否正确？", shape=diamond];
    check_endian [label="解析字节序并验证有效性", shape=diamond];
    check_class [label="确定ELF是32位还是64位", shape=diamond];
    get_shstrndx [label="获取节头表索引shstrndx"];
    read_shstrtab [label="读取字符串表节头信息到sh_buf"];
    parse_shstrtab [label="解析字符串表偏移和大小"];
    init_loop [label="初始化循环变量sh_i=0"];
    loop_condition [label="sh_i < shnum?", shape=diamond];
    read_section_header [label="读取节头信息到sh_buf"];
    check_section_name [label="检查节名称是否为.dynstr？", shape=diamond];
    found_dynstr [label="记录.dynstr节的偏移和大小"];
    loop_increment [label="sh_i += 1\nshoff += shentsize"];
    read_dynstr [label="读取.dynstr节内容到buf"];
    parse_versions [label="遍历字符串，解析GLIBC_2.*版本"];
    update_max_ver [label="更新最大版本号max_ver"];
    return_ver [label="返回max_ver", shape=ellipse];
    error_magic [label="返回错误InvalidElfMagic", shape=ellipse];
    error_endian [label="返回错误InvalidElfEndian", shape=ellipse];
    error_class [label="返回错误InvalidElfClass", shape=ellipse];
    error_dynstr [label="返回错误InvalidGnuLibCVersion", shape=ellipse];
    
    start -> read_elf_header;
    read_elf_header -> check_magic;
    
    check_magic -> check_endian [label="有效"];
    check_magic -> error_magic [label="无效"];
    
    check_endian -> check_class [label="有效"];
    check_endian -> error_endian [label="无效"];
    
    check_class -> get_shstrndx [label="ELFCLASS32/64"];
    check_class -> error_class [label="无效"];
    
    get_shstrndx -> read_shstrtab;
    read_shstrtab -> parse_shstrtab;
    parse_shstrtab -> init_loop;
    
    init_loop -> loop_condition;
    loop_condition -> read_section_header [label="是"];
    loop_condition -> error_dynstr [label="否"];
    
    read_section_header -> check_section_name;
    check_section_name -> found_dynstr [label="匹配"];
    check_section_name -> loop_increment [label="不匹配"];
    
    loop_increment -> loop_condition;
    found_dynstr -> read_dynstr;
    
    read_dynstr -> parse_versions;
    parse_versions -> update_max_ver [label="找到GLIBC_2.*"];
    update_max_ver -> parse_versions [label="继续遍历"];
    
    parse_versions -> return_ver [label="遍历完成"];
}
