
digraph flowchart {
    node [shape=rectangle, fontname="Courier", fontsize=10];
    edge [fontname="Courier", fontsize=10];

    start [label="开始 gen()"];
    check_naked [label="检查调用约定\nif (cc != .naked)", shape=diamond];
    non_naked_prologue [label="非Naked调用处理"];
    save_fp_lr [label="保存FP/LR: stp x29, x30, [sp, #-16]!"];
    backpatch_save [label="添加寄存器保存占位符\nbackpatch_save_registers"];
    mov_fp_sp [label="设置帧指针: mov x29, sp"];
    backpatch_reloc [label="添加栈调整占位符\nbackpatch_reloc"];
    handle_ret_mcv [label="处理返回值存储到栈", shape=diamond];
    copy_args [label="循环复制寄存器参数到栈"];
    dbg_prologue [label="插入调试标记\ndbg_prologue_end"];
    gen_body [label="生成函数体 genBody()"];
    backpatch_regs [label="回填保存寄存器指令"];
    calc_stack [label="计算总栈大小\naligned_total_stack_end"];
    handle_exitlude [label="处理退出跳转\nbackpatch exitlude jumps"];
    restore_stack [label="恢复栈指针: add sp, sp, #stack_size"];
    pop_regs [label="恢复保存的寄存器: pop_regs"];
    restore_fp_lr [label="恢复FP/LR: ldp x29, x30, [sp], #16"];
    ret_lr [label="返回指令: ret x30"];
    naked_prologue [label="Naked调用处理"];
    dbg_line [label="插入调试信息\ndbg_line"];
    end [label="结束"];

    start -> check_naked;
    
    check_naked -> non_naked_prologue [label="是"];
    check_naked -> naked_prologue [label="否"];
    
    non_naked_prologue -> save_fp_lr;
    save_fp_lr -> backpatch_save;
    backpatch_save -> mov_fp_sp;
    mov_fp_sp -> backpatch_reloc;
    backpatch_reloc -> handle_ret_mcv;
    
    handle_ret_mcv -> copy_args [label="存在ret_mcv"];
    handle_ret_mcv -> copy_args [label="无ret_mcv"];
    
    copy_args -> dbg_prologue;
    dbg_prologue -> gen_body;
    gen_body -> backpatch_regs;
    backpatch_regs -> calc_stack;
    calc_stack -> handle_exitlude;
    handle_exitlude -> restore_stack;
    restore_stack -> pop_regs;
    pop_regs -> restore_fp_lr;
    restore_fp_lr -> ret_lr;
    ret_lr -> dbg_line;
    
    naked_prologue -> dbg_prologue;
    dbg_prologue -> gen_body;
    gen_body -> dbg_line;
    
    dbg_line -> end;
}
