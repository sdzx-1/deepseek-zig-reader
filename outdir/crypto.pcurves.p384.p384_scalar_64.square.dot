
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Helvetica", fillcolor="#E5E5E5", color="#333333"];
    edge [color="#666666", arrowsize=0.8];

    start [label="开始", shape=ellipse, fillcolor="#4CAF50", color="#2E7D32"];
    init [label="初始化变量\n从arg1中提取x1-x6"];
    process_x6 [label="处理x6:\n- 多精度乘法\n- 进位累加"];
    montgomery_reduce_1 [label="Montgomery约简:\n- 特殊常数乘法\n- 模运算优化"];
    process_x1 [label="处理x1:\n- 多精度乘法\n- 进位累加"];
    montgomery_reduce_2 [label="Montgomery约简"];
    process_x2 [label="处理x2:\n- 多精度乘法\n- 进位累加"];
    montgomery_reduce_3 [label="Montgomery约简"];
    process_x3 [label="处理x3:\n- 多精度乘法\n- 进位累加"];
    montgomery_reduce_4 [label="Montgomery约简"];
    process_x4 [label="处理x4:\n- 多精度乘法\n- 进位累加"];
    montgomery_reduce_5 [label="Montgomery约简"];
    process_x5 [label="处理x5:\n- 多精度乘法\n- 进位累加"];
    final_reduce [label="最终约简:\n- 借位减法\n- 条件选择结果"];
    output [label="存储结果到out1数组", shape=box3d];
    end [label="结束", shape=ellipse, fillcolor="#FF5252", color="#B71C1C"];

    start -> init;
    init -> process_x6;
    process_x6 -> montgomery_reduce_1;
    montgomery_reduce_1 -> process_x1;
    process_x1 -> montgomery_reduce_2;
    montgomery_reduce_2 -> process_x2;
    process_x2 -> montgomery_reduce_3;
    montgomery_reduce_3 -> process_x3;
    process_x3 -> montgomery_reduce_4;
    montgomery_reduce_4 -> process_x4;
    process_x4 -> montgomery_reduce_5;
    montgomery_reduce_5 -> process_x5;
    process_x5 -> final_reduce;
    final_reduce -> output;
    output -> end;

    // 隐式循环结构表示
    edge [style=invis];
    montgomery_reduce_5 -> process_x5 [weight=10];
}
