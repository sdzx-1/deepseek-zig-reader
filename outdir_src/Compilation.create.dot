
digraph flowchart {
    node [shape=rectangle, style="rounded", fillcolor="#E8E8E8", color="#303030", fontname="Helvetica"]

    start [label="开始"]
    check_output_mode [label="检查output_mode\n确定is_dyn_lib和is_exe_or_dyn_lib"]
    check_conflict [label="检查linker_export_table\n和linker_import_table冲突"]
    init_config [label="初始化配置：\nlibc_dirs, sysroot,\ncompiler_rt_strat, ubsan_rt_strat"]
    create_comp [label="创建Compilation结构体\n填充基础配置（gpa, arena等）"]
    handle_cache [label="处理缓存模式：\n.incremental或.whole"]
    process_c_files [label="处理C源文件\n添加到c_object_table"]
    process_rc_files [label="处理RC资源文件\n添加到win32_resource_table"]
    handle_target_specific [label="处理目标平台特定逻辑：\nmusl/glibc/WASI/MinGW等"]
    link_dependencies [label="处理链接依赖项：\nlibunwind, libcxx, libtsan等"]
    finalize [label="返回comp对象\n完成初始化"]
    end [label="结束"]

    // 流程连接
    start -> check_output_mode
    check_output_mode -> check_conflict
    check_conflict -> init_config [label="无冲突"]
    init_config -> create_comp
    create_comp -> handle_cache

    // 缓存模式分支
    handle_cache -> handle_cache_incremental [label=".incremental"]
    handle_cache -> handle_cache_whole [label=".whole"]
    
    // Incremental模式子流程
    subgraph cluster_incremental {
        label="Incremental模式"
        handle_cache_incremental [label="计算digest\n设置artifact目录\n初始化bin_file/implib_emit"]
        handle_cache_incremental -> post_cache
    }

    // Whole模式子流程
    subgraph cluster_whole {
        label="Whole模式"
        handle_cache_whole [label="延迟确定输出路径\n保存lf_open_opts"]
        handle_cache_whole -> post_cache
    }

    // 公共后续流程
    post_cache [label="处理LLVM对象\n（若需要）", shape=rectangle]
    handle_cache -> post_cache [style=invis]
    post_cache -> process_c_files
    process_c_files -> process_rc_files
    process_rc_files -> handle_target_specific
    handle_target_specific -> link_dependencies
    link_dependencies -> finalize
    finalize -> end

    // 条件分支样式
    edge [fontname="Helvetica", fontsize=10]
    check_conflict -> error_export_import_conflict [label="冲突", color="red"]
    error_export_import_conflict [label="返回错误\nerror.ExportTableAndImportTableConflict", shape=oval, fillcolor="#FFCCCC"]
}
