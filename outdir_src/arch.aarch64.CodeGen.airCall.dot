
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="Start airCall"];
    check_modifier [label="Check modifier == .always_tail?"];
    fail_tail_call [label="Return fail: TODO tail calls"];
    get_pl_op [label="Get pl_op, callee, extra, args"];
    resolve_ty [label="Resolve function type (fn_ty)"];
    resolve_convention [label="Resolve calling convention (info)"];
    spill_flags [label="Spill compare flags if occupied"];
    check_return_stack [label="Check return value on stack?"];
    alloc_mem [label="Allocate stack memory\nSet ret_ptr_reg"];
    setup_args [label="Adjust max_end_stack for arguments"];
    process_args [label="Process each argument\nRegister/Stack handling"];
    check_callee_value [label="Is callee a known value?"];
    handle_elf [label="Fail: TODO Elf calls"];
    handle_macho [label="Fail: TODO Mach-O calls"];
    handle_coff [label="Generate COFF call\nSet x30 via linker_load"];
    handle_plan9 [label="Generate Plan9 call\nSet x30 via memory"];
    handle_extern [label="Handle extern function\nLoad symbol and BLR"];
    handle_pointer [label="Handle function pointer\nSet x30 and BLR"];
    determine_result [label="Determine return value MCValue"];
    finish_air [label="FinishAir with args"];
    iterate_bigtomb [label="IterateBigTomb with args"];

    start -> check_modifier;
    check_modifier -> fail_tail_call [label="Yes"];
    check_modifier -> get_pl_op [label="No"];
    get_pl_op -> resolve_ty;
    resolve_ty -> resolve_convention;
    resolve_convention -> spill_flags;
    spill_flags -> check_return_stack;

    check_return_stack -> alloc_mem [label="Yes"];
    alloc_mem -> setup_args;
    check_return_stack -> setup_args [label="No"];

    setup_args -> process_args;
    process_args -> check_callee_value;

    check_callee_value -> handle_elf [label="ELF"];
    check_callee_value -> handle_macho [label="Mach-O"];
    check_callee_value -> handle_coff [label="COFF"];
    check_callee_value -> handle_plan9 [label="Plan9"];
    check_callee_value -> handle_extern [label="Extern"];
    check_callee_value -> handle_pointer [label="Pointer"];

    handle_coff -> determine_result;
    handle_plan9 -> determine_result;
    handle_extern -> determine_result;
    handle_pointer -> determine_result;

    determine_result -> finish_air [label="Args+1 <= Liveness.bpi-1"];
    determine_result -> iterate_bigtomb [label="Args+1 > Liveness.bpi-1"];
}
