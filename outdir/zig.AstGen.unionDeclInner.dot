
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Helvetica"];
    edge [fontname="Helvetica"];

    start [label="开始 unionDeclInner"];
    reserve_inst [label="保留指令索引 decl_inst"];
    init_namespace [label="初始化 namespace"];
    advance_cursor [label="移动源码光标到节点"];
    init_block_scope [label="初始化 block_scope"];
    scan_container [label="扫描容器成员 decl_count 和 field_count"];
    check_layout_error [label="检查布局是否支持枚举标签类型"];
    handle_arg_inst [label="处理参数节点 arg_inst"];
    init_wip_members [label="初始化 wip_members"];
    hash_layout_info [label="哈希布局和参数信息"];
    process_members [label="遍历所有成员节点"];
    check_member_type [label="检查成员类型是否存在"];
    check_align [label="处理对齐表达式"];
    check_value [label="处理值表达式"];
    final_fields_hash [label="计算字段哈希 fields_hash"];
    handle_block_scope [label="处理 block_scope 的指令"];
    set_union_inst [label="设置联合指令信息"];
    append_data [label="将数据追加到 astgen.extra 和 body"];
    return [label="返回 decl_inst.toRef()"];

    start -> reserve_inst;
    reserve_inst -> init_namespace;
    init_namespace -> advance_cursor;
    advance_cursor -> init_block_scope;
    init_block_scope -> scan_container;
    scan_container -> check_layout_error;

    check_layout_error -> handle_arg_inst [label="无错误"];
    check_layout_error -> error_return [label="布局错误"];

    handle_arg_inst -> init_wip_members;
    init_wip_members -> hash_layout_info;
    hash_layout_info -> process_members;

    process_members -> check_member_type [label="每个成员"];
    check_member_type -> check_align [label="存在类型"];
    check_member_type -> error_missing_type [label="无类型且无参数"];
    check_align -> check_value;
    check_value -> next_member [label="继续下一个成员"];

    process_members -> final_fields_hash [label="所有成员处理完毕"];
    final_fields_hash -> handle_block_scope;
    handle_block_scope -> set_union_inst;
    set_union_inst -> append_data;
    append_data -> return;

    // 错误处理节点
    error_return [label="返回错误", shape="diamond"];
    error_missing_type [label="报错：字段缺少类型", shape="diamond"];

    // 连接错误路径
    check_layout_error -> error_return [label="检测到错误"];
    check_member_type -> error_missing_type [label="条件不满足"];
    error_missing_type -> error_return;
    error_return -> return [style="dashed", label="错误返回"];
}
