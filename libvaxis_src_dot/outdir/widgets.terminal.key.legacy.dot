
digraph flowchart {
    node [shape=rectangle fontname="Courier" fontsize=12];
    edge [fontname="Courier" fontsize=10];

    start [label="legacy(writer, key)"];
    check_text [label="key.text exists?" shape=diamond];
    write_text [label="writer.writeAll(text)\nreturn"];
    calc_mods [label="effective_mods = mods & (shift|alt|ctrl)"];
    check_mods_ascii [label="effective_mods == 0\n&& codepoint <= 0x7F?" shape=diamond];
    write_byte [label="writer.writeByte(b)\nreturn"];
    check_ctrl_alpha [label="effective_mods == ctrl\n&& a-z?" shape=diamond];
    write_ctrl [label="writer.writeByte(b-0x60)\nreturn"];
    check_alt_printable [label="effective_mods == alt\n&& printable ASCII?" shape=diamond];
    write_alt [label="writer.print(\"\\x1b{c}\")\nreturn"];
    check_ctrl_alt_alpha [label="effective_mods == (ctrl|alt)\n&& a-z?" shape=diamond];
    write_ctrl_alt [label="writer.print(\"\\x1b{d}\")\nreturn"];
    def_switch [label="switch(key.codepoint)\n匹配预定义键"];
    check_mods [label="effective_mods分支" shape=diamond];
    write_sequence [label="生成转义序列\nwriter.print(...)"];
    end [label="流程结束"];

    start -> check_text;
    
    check_text -> write_text [label="是"];
    check_text -> calc_mods [label="否"];
    
    calc_mods -> check_mods_ascii;
    
    check_mods_ascii -> write_byte [label="是"];
    check_mods_ascii -> check_ctrl_alpha [label="否"];
    
    check_ctrl_alpha -> write_ctrl [label="是"];
    check_ctrl_alpha -> check_alt_printable [label="否"];
    
    check_alt_printable -> write_alt [label="是"];
    check_alt_printable -> check_ctrl_alt_alpha [label="否"];
    
    check_ctrl_alt_alpha -> write_ctrl_alt [label="是"];
    check_ctrl_alt_alpha -> def_switch [label="否"];
    
    def_switch -> check_mods;
    
    check_mods -> write_sequence [label="根据修饰符组合"];
    write_sequence -> end;
}
