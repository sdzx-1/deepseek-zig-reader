
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="开始 airAbs"];
    get_pt_zcu [label="获取pt/zcu/ty_op/ty"];
    check_ty_tag [label="检查ty的zigTypeTag"];
    branch_int [label="类型为.int"];
    branch_float [label="类型为.float"];
    branch_vector [label="类型为.vector"];
    handle_float [label="调用floatSign(ABS)"];
    handle_vector_child [label="检查vector子类型"];
    handle_vector_int [label="处理vector<int>"];
    handle_vector_float [label="调用floatSign(ABS)"];
    
    start -> get_pt_zcu;
    get_pt_zcu -> check_ty_tag;

    check_ty_tag -> branch_int [label=".int"];
    check_ty_tag -> branch_float [label=".float"];
    check_ty_tag -> branch_vector [label=".vector"];

    branch_float -> handle_float;
    handle_float -> finish;

    branch_vector -> handle_vector_child;
    handle_vector_child -> handle_vector_int [label="子类型为.int"];
    handle_vector_child -> handle_vector_float [label="子类型为.float"];
    handle_vector_float -> finish;
    
    subgraph cluster_int {
        label="处理整数类型";
        int_check_size [label="检查abiSize"];
        size_1_8 [label="大小1-8字节"];
        size_9_16 [label="大小9-16字节"];
        size_large [label="更大尺寸"];
        
        branch_int -> int_check_size;
        int_check_size -> size_1_8 [label="1-8"];
        int_check_size -> size_9_16 [label="9-16"];
        int_check_size -> size_large [label=">16"];
        
        size_1_8 -> gen_cmov [label="生成NEG+CMOV指令"];
        size_9_16 -> gen_register_pair [label="处理寄存器对"];
        size_large -> gen_limb_loop [label="分块循环取反"];
    }

    subgraph cluster_vector_int {
        label="处理vector<int>";
        check_child_bits [label="检查子元素位数"];
        bits_8 [label="8位向量"];
        bits_16 [label="16位向量"];
        bits_32 [label="32位向量"];
        check_avx_feature [label="检查AVX/SSSE3支持"];
        gen_vector_abs [label="生成向量ABS指令"];
        
        handle_vector_int -> check_child_bits;
        check_child_bits -> bits_8 [label="8"];
        check_child_bits -> bits_16 [label="16"];
        check_child_bits -> bits_32 [label="32"];
        bits_8 -> check_avx_feature;
        check_avx_feature -> gen_vector_abs [label="根据特性选择指令"];
        gen_vector_abs -> finish;
    }

    gen_cmov -> finish;
    gen_register_pair -> finish;
    gen_limb_loop -> finish;

    finish [label="返回result并结束"];
    error [label="fail: 未实现类型"];
    check_ty_tag -> error [label="其他类型"];
    handle_vector_child -> error [label="其他子类型"];
    check_child_bits -> error [label="其他位数"];
    check_avx_feature -> error [label="无支持指令集"];
}
