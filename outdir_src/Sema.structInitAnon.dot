
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];
    rankdir=TB;

    start [label="开始"];
    init_vars [label="初始化types, values, names数组"];
    loop_start [label="循环处理每个字段"];
    extract_field [label="提取字段名和初始化表达式"];
    resolve_type_value [label="解析字段类型和值"];
    check_opaque [label="检查是否为opaque类型"];
    opaque_error [label="生成错误消息并返回", shape=diamond];
    record_runtime [label="记录运行时索引（如有）"];
    loop_end [label="完成所有字段处理？"];
    compute_hash [label="计算类型哈希值"];
    get_struct_type [label="创建/获取结构体类型"];
    new_type [label="新建类型：设置字段信息、命名空间等"];
    existing_type [label="使用现有类型"];
    check_runtime [label="存在运行时索引？", shape=diamond];
    handle_runtime [label="处理运行时分配和初始化"];
    return_ref [label="返回指针常量"];
    handle_const [label="处理常量聚合"];
    return_const [label="返回结构体常量"];
    end [label="结束"];

    start -> init_vars;
    init_vars -> loop_start;
    loop_start -> extract_field;
    extract_field -> resolve_type_value;
    resolve_type_value -> check_opaque;
    check_opaque -> opaque_error [label="是"];
    check_opaque -> record_runtime [label="否"];
    record_runtime -> loop_end;
    loop_end -> loop_start [label="继续循环"];
    loop_end -> compute_hash [label="循环结束"];
    compute_hash -> get_struct_type;
    get_struct_type -> new_type [label="新建类型"];
    get_struct_type -> existing_type [label="已有类型"];
    new_type -> check_runtime;
    existing_type -> check_runtime;
    check_runtime -> handle_runtime [label="是"];
    check_runtime -> handle_const [label="否"];
    handle_runtime -> return_ref;
    return_ref -> end;
    handle_const -> return_const;
    return_const -> end;
    opaque_error -> end [style=dashed, color=red];
}
