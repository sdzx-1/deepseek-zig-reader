
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="开始处理unionFields"];
    init [label="初始化跟踪器\n解析ZIR指令\n提取扩展数据"];
    check_tag_type [label="检查tag_type_ref是否存在"];
    handle_auto_enum [label="自动生成枚举标签类型\n检查整数类型有效性"];
    handle_explicit_tag [label="使用显式枚举类型\n验证字段匹配"];
    process_fields [label="循环处理每个字段"];
    field_name [label="解析字段名称"];
    field_type [label="解析字段类型"];
    field_align [label="解析对齐方式"];
    field_tag [label="解析标签值"];
    check_duplicate_tag [label="检查标签值重复"];
    validate_field_type [label="验证字段类型有效性\n(opaque/extern/packed)"];
    collect_types [label="收集字段类型和对齐信息"];
    set_fields [label="设置union的字段类型和对齐"];
    generate_tag [label="生成最终枚举标签类型"];
    error_handling [label="错误处理\n返回错误信息"];
    end [label="返回成功"];

    start -> init;
    init -> check_tag_type;

    check_tag_type -> handle_auto_enum [label="small.auto_enum_tag=true"];
    check_tag_type -> handle_explicit_tag [label="显式tag_type_ref存在"];
    check_tag_type -> process_fields [label="无标签类型"];

    handle_auto_enum -> process_fields;
    handle_explicit_tag -> process_fields;

    process_fields -> field_name [label="循环每个字段"];
    field_name -> field_type;
    field_type -> field_align [label="存在对齐要求"];
    field_align -> field_tag [label="存在标签值"];
    field_tag -> check_duplicate_tag;
    check_duplicate_tag -> validate_field_type;
    validate_field_type -> collect_types;

    collect_types -> process_fields [label="继续下一个字段"];

    process_fields -> set_fields [label="所有字段处理完成"];
    set_fields -> generate_tag;
    generate_tag -> end;

    // 错误处理路径
    handle_auto_enum -> error_handling [label="无效整数类型"];
    handle_explicit_tag -> error_handling [label="类型不匹配"];
    check_duplicate_tag -> error_handling [label="重复标签值"];
    validate_field_type -> error_handling [label="无效字段类型"];
    generate_tag -> error_handling [label="枚举字段缺失"];
    error_handling -> end [label="返回错误"];
}
