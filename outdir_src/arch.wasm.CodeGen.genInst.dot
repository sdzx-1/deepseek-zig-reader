
digraph flowchart {
    node [shape=box, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="开始 genInst"];
    switch [label="switch (air_tags[inst])", shape=diamond];
    end [label="返回结果/结束"];
    
    // 主要处理分支
    bin_ops [label="调用 airBinOp"];
    sat_ops [label="调用 airSatBinOp"];
    wrap_ops [label="调用 airWrapBinOp"];
    unreachable [label="unreachable"];
    fail [label="调用 cg.fail"];
    special_ops [label="特殊操作\n(atomic/store/load等)"];
    unary_float [label="调用 airUnaryFloatOp"];
    cmp_ops [label="调用 airCmp"];
    error_handling [label="错误处理分支"];
    
    // 连接节点
    start -> switch;
    
    // Switch分支连接
    switch -> bin_ops [label=".add/.sub/.mul等"];
    switch -> sat_ops [label=".add_sat/.sub_sat"];
    switch -> wrap_ops [label=".add_wrap/.sub_wrap"];
    switch -> unreachable [label=".inferred_alloc\n.inferred_alloc_comptime"];
    switch -> unary_float [label=".sqrt/.sin/.cos等"];
    switch -> cmp_ops [label=".cmp_eq/.cmp_gt等"];
    switch -> special_ops [label=".atomic_load\n.store/memcpy等"];
    switch -> error_handling [label="未实现指令\n(.c_va_arg/.assembly等)"];
    
    // 公共出口
    bin_ops -> end;
    sat_ops -> end;
    wrap_ops -> end;
    unary_float -> end;
    cmp_ops -> end;
    special_ops -> end;
    unreachable -> end [label="终止程序"];
    error_handling -> end [label="返回错误"];
    
    // 注释说明
    subgraph cluster_legend {
        label="图例说明";
        style=dashed;
        note1 [label="菱形节点: 条件分支", shape=note];
        note2 [label="方框节点: 处理步骤", shape=note];
        note3 [label="粗线: 主要逻辑流", shape=note];
    }
}
