
digraph reifyStruct {
    node [shape=rectangle, style=rounded];

    start [label="开始"];
    init_vars [label="初始化变量\n(pt, zcu, gpa, ip)"];
    calc_fields_len [label="计算字段数量 fields_len"];
    init_hasher [label="初始化哈希器 hasher"];
    loop_fields [label="遍历每个字段 (0..fields_len)"];
    extract_field_info [label="提取字段信息\n(名称、类型、默认值、comptime、对齐)"];
    update_hash [label="更新哈希值\n(field_name, type, default, comptime, alignment)"];
    check_flags [label="更新标志变量\nany_comptime_fields\nany_default_inits\nany_aligned_fields"];
    end_loop [label="循环结束"];
    tracked_inst [label="获取 tracked_inst"];
    get_struct_type [label="尝试获取 StructType"];
    existing_type [label="类型已存在？"];
    yes_existing [label="声明依赖\n返回类型引用"];
    create_wip [label="创建 WIP 类型"];
    set_name [label="设置类型名称"];
    process_fields [label="处理每个字段验证"];
    check_field_name [label="字段名重复？"];
    check_alignment [label="检查对齐值有效性"];
    check_comptime [label="验证 comptime 约束"];
    check_default_value [label="验证默认值"];
    check_type_valid [label="检查字段类型有效性\n(opaque, noreturn, extern/packed 约束)"];
    handle_layout [label="处理布局相关逻辑"];
    packed_backing [label="计算字段总位数\n处理后备整数类型"];
    create_namespace [label="创建新命名空间"];
    queue_jobs [label="安排代码生成任务"];
    finish_type [label="完成类型创建\n返回类型引用"];
    error_handling [label="错误处理路径"];
    end [label="结束"];

    start -> init_vars;
    init_vars -> calc_fields_len;
    calc_fields_len -> init_hasher;
    init_hasher -> loop_fields;

    loop_fields -> extract_field_info [label="遍历每个字段"];
    extract_field_info -> update_hash;
    update_hash -> check_flags;
    check_flags -> loop_fields [label="继续下一个字段"];
    loop_fields -> end_loop [label="所有字段处理完毕"];

    end_loop -> tracked_inst;
    tracked_inst -> get_struct_type;
    get_struct_type -> existing_type;

    existing_type -> yes_existing [label="是"];
    yes_existing -> end;

    existing_type -> create_wip [label="否"];
    create_wip -> set_name;
    set_name -> process_fields;

    process_fields -> loop_fields_2 [label="再次遍历每个字段"];
    loop_fields_2 [label="遍历字段 (0..fields_len)"];
    loop_fields_2 -> check_field_name;
    check_field_name -> error_handling [label="重复"];
    check_field_name -> check_alignment [label="不重复"];
    check_alignment -> error_handling [label="无效"];
    check_alignment -> check_comptime [label="有效"];
    check_comptime -> error_handling [label="约束失败"];
    check_comptime -> check_default_value [label="通过"];
    check_default_value -> check_type_valid;
    check_type_valid -> error_handling [label="无效类型"];
    check_type_valid -> loop_fields_2 [label="继续下一个字段"];
    loop_fields_2 -> handle_layout [label="所有字段验证完成"];

    handle_layout -> packed_backing [label="layout == packed"];
    packed_backing -> create_namespace;
    handle_layout -> create_namespace [label="其他布局"];

    create_namespace -> queue_jobs;
    queue_jobs -> finish_type;
    finish_type -> end;

    error_handling -> end [label="取消 WIP 类型"];
}
