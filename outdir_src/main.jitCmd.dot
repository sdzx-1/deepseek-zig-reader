
digraph jitCmd_flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];

    start [label="开始 jitCmd"];
    init_check [label="检查 dev.check(.jit_command)"];
    setup_progress [label="设置 root_prog_node"];
    resolve_target [label="解析目标查询"];
    generate_exe_name [label="生成 exe_basename"];
    find_self_exe [label="查找 self_exe_path"];
    setup_optimize [label="设置 optimize_mode 和 strip"];
    handle_dirs [label="处理 zig_lib_dir 和 global_cache_dir"];
    init_thread_pool [label="初始化 thread_pool"];
    create_modules [label="创建 root_mod 和 aro_mod (可选)"];
    create_compilation [label="创建 Compilation 实例"];
    check_server [label="options.server?" shape=diamond];

    server_flow [label="启动服务器\n处理错误包\n并退出"];
    non_server_flow [label="调用 updateModule\n处理错误"];
    prepare_child_argv [label="准备子进程参数"];
    check_execv [label="支持 execv?" shape=diamond];
    exec_child [label="尝试 execv\n处理错误"];
    check_spawn [label="支持 spawn?" shape=diamond];
    spawn_child [label="生成子进程\n捕获输出"];
    wait_child [label="等待子进程结束"];
    handle_exit [label="处理退出码/错误"];

    start -> init_check;
    init_check -> setup_progress;
    setup_progress -> resolve_target;
    resolve_target -> generate_exe_name;
    generate_exe_name -> find_self_exe;
    find_self_exe -> setup_optimize;
    setup_optimize -> handle_dirs;
    handle_dirs -> init_thread_pool;
    init_thread_pool -> create_modules;
    create_modules -> create_compilation;
    create_compilation -> check_server;

    check_server -> server_flow [label="是"];
    check_server -> non_server_flow [label="否"];
    server_flow -> prepare_child_argv;
    non_server_flow -> prepare_child_argv;

    prepare_child_argv -> check_execv;
    check_execv -> exec_child [label="是"];
    exec_child -> handle_exit [label="失败时输出错误"];
    check_execv -> check_spawn [label="否"];
    check_spawn -> spawn_child [label="是"];
    check_spawn -> fatal_error [label="否"];
    spawn_child -> wait_child;
    wait_child -> handle_exit;

    // 错误处理路径
    fatal_error [label="输出错误信息\n进程退出", color=red];
    edge [color=red];
    find_self_exe -> fatal_error [label="查找失败"];
    handle_dirs -> fatal_error [label="目录打开失败"];
    create_compilation -> fatal_error [label="创建失败"];
    non_server_flow -> fatal_error [label="错误时退出"];
    handle_exit -> fatal_error [label="非零退出码"];
}
