
digraph flowchart {
    node [shape=rectangle, style=rounded, fontname=Helvetica];
    edge [fontname=Helvetica];

    start [label="开始 allocateAllocSections"];
    init_align [label="初始化 Align 结构体\n记录 TLS 段最大对齐"];
    find_tls_sections [label="遍历所有节\n标记第一个 TLS 节\n更新最大对齐"];
    init_covers [label="初始化段覆盖数组 (covers)"];
    distribute_sections [label="根据节标志分配节到对应段"];
    get_base_addr [label="获取基地址 (PHDR 表结束地址)"];
    process_covers [label="遍历每个段覆盖"];
    calc_max_align [label="计算段内最大对齐"];
    align_addr [label="对齐段起始地址"];
    process_sections [label="处理段内每个节"];
    check_tbss [label="节类型是 SHT_NOBITS 且 TLS?" shape=diamond];
    handle_tbss [label="调整 .tbss 地址\n不占用文件空间"];
    handle_normal [label="计算对齐和填充\n更新地址和大小"];
    check_space [label="文件空间是否足够?" shape=diamond];
    move_segment [label="寻找新空间\n移动节数据"];
    update_phdr [label="更新程序头信息\n(地址、大小、对齐)"];
    end [label="结束"];

    start -> init_align;
    init_align -> find_tls_sections;
    find_tls_sections -> init_covers;
    init_covers -> distribute_sections;
    distribute_sections -> get_base_addr;
    get_base_addr -> process_covers;

    process_covers -> calc_max_align [label="段非空"];
    calc_max_align -> align_addr;
    align_addr -> process_sections;

    process_sections -> check_tbss;
    check_tbss -> handle_tbss [label="是"];
    check_tbss -> handle_normal [label="否"];
    handle_tbss -> process_sections_end;
    handle_normal -> process_sections_end;

    process_sections_end [label="继续处理下一个节" shape=point];
    process_sections_end -> process_sections [label="循环"];

    process_covers -> check_space [label="段处理完成"];
    check_space -> move_segment [label="不足"];
    check_space -> update_phdr [label="足够"];
    move_segment -> update_phdr;

    update_phdr -> process_covers [label="继续下一个段"];
    process_covers -> end [label="所有段处理完毕"];
}
