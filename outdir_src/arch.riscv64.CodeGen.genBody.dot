
digraph flowchart {
    node [shape=rectangle, style="rounded", fontname="Arial"];
    edge [fontname="Arial"];
    
    start [label="开始 genBody"];
    init [label="初始化变量\npt, zcu, ip, air_tags"];
    for_loop [label="循环遍历 body 中的每个 inst"];
    check_unused [label="检查指令是否未使用且不需要处理\n(isUnused && !mustLower)"];
    skip [label="跳过当前指令"];
    log_debug [label="输出调试日志\nwip_mir_log 和 verbose_tracking_log"];
    prepare_state [label="保存旧 air_bookkeeping\n确保容量"];
    process_inst [label="处理指令标签 (switch)"];
    handle_binop [label="处理二元操作\n(add, sub, mul 等)"];
    handle_ptrmath [label="处理指针运算\n(ptr_add, ptr_sub)"];
    handle_math [label="处理数学函数\n(sqrt, sin, cos 等)"];
    handle_todo [label="返回错误\n(TODO 未实现)"];
    assertions [label="断言检查\n寄存器管理正确性"];
    loop_end [label="循环结束"];
    final_log [label="输出最终调试日志"];
    end [label="函数结束"];

    start -> init;
    init -> for_loop;
    for_loop -> check_unused;
    
    check_unused -> skip [label="是"];
    check_unused -> log_debug [label="否"];
    skip -> for_loop [label="继续下一个 inst"];
    
    log_debug -> prepare_state;
    prepare_state -> process_inst;
    
    process_inst -> handle_binop [label="二元操作标签"];
    process_inst -> handle_ptrmath [label="指针运算标签"];
    process_inst -> handle_math [label="数学函数标签"];
    process_inst -> handle_todo [label="未实现标签"];
    process_inst -> assertions [label="其他情况"];
    
    handle_binop -> assertions;
    handle_ptrmath -> assertions;
    handle_math -> assertions;
    handle_todo -> end [label="提前返回错误"];
    
    assertions -> for_loop [label="继续下一个 inst"];
    
    for_loop -> loop_end [label="所有指令处理完毕"];
    loop_end -> final_log;
    final_log -> end;
}
