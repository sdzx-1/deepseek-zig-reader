
digraph flowchart {
    node [shape=rectangle, fontname="Courier", fontsize=10];
    edge [fontname="Courier", fontsize=10];

    start [label="containerDecl 入口"];
    check_container_type [label="检查容器类型 (struct/union/enum/opaque)", shape=diamond];
    handle_struct [label="处理 struct"];
    handle_union [label="处理 union"];
    handle_enum [label="处理 enum"];
    handle_opaque [label="处理 opaque"];
    end [label="返回结果/错误", shape=ellipse];

    // 主流程分支
    start -> check_container_type;
    check_container_type -> handle_struct [label="struct"];
    check_container_type -> handle_union [label="union"];
    check_container_type -> handle_enum [label="enum"];
    check_container_type -> handle_opaque [label="opaque"];

    // struct 分支
    handle_struct -> struct_layout_check [label="检查布局 (packed/extern)"];
    struct_layout_check -> call_structDeclInner [label="生成结构体 ZIR"];
    call_structDeclInner -> struct_end [label="返回结果"];
    struct_end -> end;

    // union 分支
    handle_union -> union_layout_check [label="检查布局 (packed/extern)"];
    union_layout_check -> call_unionDeclInner [label="生成联合体 ZIR"];
    call_unionDeclInner -> union_end [label="返回结果"];
    union_end -> end;

    // enum 分支
    handle_enum -> enum_layout_check [label="检查布局标记"];
    enum_layout_check -> count_members [label="统计成员总数和显式值"];
    count_members -> check_nonexhaustive [label="处理非穷尽标记 '_'"];
    check_nonexhaustive -> validate_tag_type [label="验证标签类型是否存在"];
    validate_tag_type -> generate_zir_enum [label="生成字段哈希和 ZIR 指令"];
    generate_zir_enum -> enum_end [label="返回结果"];
    validate_tag_type -> error_missing_tag [label="错误：缺少标签类型"];
    check_nonexhaustive -> error_invalid_placement [label="错误：'_' 非最后"];
    enum_end -> end;

    // opaque 分支
    handle_opaque -> check_opaque_layout [label="检查无效布局标记"];
    check_opaque_layout -> scan_members [label="扫描成员（仅允许声明）"];
    scan_members -> generate_zir_opaque [label="生成不透明类型 ZIR"];
    generate_zir_opaque -> opaque_end [label="返回结果"];
    check_opaque_layout -> error_invalid_layout [label="错误：不支持布局"];
    scan_members -> error_field_in_opaque [label="错误：存在字段"];
    opaque_end -> end;

    // 错误路径统一指向结束
    error_missing_tag -> end [label="返回错误"];
    error_invalid_placement -> end [label="返回错误"];
    error_invalid_layout -> end [label="返回错误"];
    error_field_in_opaque -> end [label="返回错误"];
}
